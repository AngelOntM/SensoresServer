"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class Sensor extends Orm_1.BaseModel {
    static ver() {
        return this.query();
    }
    static schema() {
        const postSchema = Validator_1.schema.create({
            pines: Validator_1.schema.array().members(Validator_1.schema.number()),
            clave: Validator_1.schema.string(),
            isActive: Validator_1.schema.boolean(),
            seccion: Validator_1.schema.number(),
            invernadero: Validator_1.schema.number()
        });
        return postSchema;
    }
    static validar(data) {
        return data.validate({ schema: this.schema() });
    }
    static schema1() {
        const postSchema = Validator_1.schema.create({
            fecha: Validator_1.schema.string(),
            hora: Validator_1.schema.string(),
            valor: Validator_1.schema.number(),
            medida: Validator_1.schema.string(),
            nombre: Validator_1.schema.string(),
            save: Validator_1.schema.boolean()
        });
        return postSchema;
    }
    static validar1(data) {
        return data.validate({ schema: this.schema1() });
    }
    static eliminar(dato) {
        return dato.delete();
    }
    static modificar(data, registro) {
        return registro.merge(data).save();
    }
    static crearStock(quantity, product) {
        product.stock = product.stock - quantity;
        return product;
    }
    static regresarStock(quantity, product) {
        product.stock = product.stock + quantity;
        return product;
    }
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Sensor.prototype, "id", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Sensor.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Sensor.prototype, "updatedAt", void 0);
exports.default = Sensor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2Vuc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLGlDQUFnQztBQUNoQyxnRUFBeUQ7QUFDekQsMkVBQW1EO0FBRW5ELE1BQXFCLE1BQU8sU0FBUSxlQUFTO0lBVXBDLE1BQU0sQ0FBQyxHQUFHO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUE7SUFDckIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNO1FBQ2xCLE1BQU0sVUFBVSxHQUFHLGtCQUFNLENBQUMsTUFBTSxDQUFDO1lBQy9CLEtBQUssRUFBRSxrQkFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxrQkFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzlDLEtBQUssRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixRQUFRLEVBQUUsa0JBQU0sQ0FBQyxPQUFPLEVBQUU7WUFDMUIsT0FBTyxFQUFFLGtCQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3hCLFdBQVcsRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtTQUM3QixDQUFDLENBQUE7UUFDRixPQUFPLFVBQVUsQ0FBQTtJQUNuQixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTztRQUNuQixNQUFNLFVBQVUsR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUMvQixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLEVBQUU7WUFDdEIsSUFBSSxFQUFFLGtCQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3JCLEtBQUssRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixNQUFNLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLEVBQUU7WUFDdkIsTUFBTSxFQUFFLGtCQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLElBQUksRUFBRSxrQkFBTSxDQUFDLE9BQU8sRUFBRTtTQUN2QixDQUFDLENBQUE7UUFDRixPQUFPLFVBQVUsQ0FBQTtJQUNuQixDQUFDO0lBRU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ2xELENBQUM7SUFFTSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUk7UUFDekIsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUE7SUFDdEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLFFBQVE7UUFDcEMsT0FBTyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ3BDLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxPQUFPO1FBQ3hDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUE7UUFDeEMsT0FBTyxPQUFPLENBQUE7SUFDaEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLE9BQU87UUFDM0MsT0FBTyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQTtRQUN4QyxPQUFPLE9BQU8sQ0FBQTtJQUNoQixDQUFDO0NBR0Y7QUE5REM7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7a0NBQ1g7QUFHakI7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNwQixnQkFBUSxvQkFBUixnQkFBUTt5Q0FBQTtBQUcxQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDdEMsZ0JBQVEsb0JBQVIsZ0JBQVE7eUNBQUE7QUFSNUIseUJBZ0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbidcbmltcG9ydCB7IEJhc2VNb2RlbCwgY29sdW1uIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvT3JtJ1xuaW1wb3J0IHsgc2NoZW1hIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbnNvciBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUgfSlcbiAgcHVibGljIGlkOiBudW1iZXJcblxuICBAY29sdW1uLmRhdGVUaW1lKHsgYXV0b0NyZWF0ZTogdHJ1ZSB9KVxuICBwdWJsaWMgY3JlYXRlZEF0OiBEYXRlVGltZVxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lXG5cbiAgcHVibGljIHN0YXRpYyB2ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnkoKVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBzY2hlbWEoKSB7XG4gICAgY29uc3QgcG9zdFNjaGVtYSA9IHNjaGVtYS5jcmVhdGUoe1xuICAgICAgcGluZXM6IHNjaGVtYS5hcnJheSgpLm1lbWJlcnMoc2NoZW1hLm51bWJlcigpKSxcbiAgICAgIGNsYXZlOiBzY2hlbWEuc3RyaW5nKCksXG4gICAgICBpc0FjdGl2ZTogc2NoZW1hLmJvb2xlYW4oKSxcbiAgICAgIHNlY2Npb246IHNjaGVtYS5udW1iZXIoKSxcbiAgICAgIGludmVybmFkZXJvOiBzY2hlbWEubnVtYmVyKClcbiAgICB9KVxuICAgIHJldHVybiBwb3N0U2NoZW1hXG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHZhbGlkYXIoZGF0YSkge1xuICAgIHJldHVybiBkYXRhLnZhbGlkYXRlKHsgc2NoZW1hOiB0aGlzLnNjaGVtYSgpIH0pXG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHNjaGVtYTEoKSB7XG4gICAgY29uc3QgcG9zdFNjaGVtYSA9IHNjaGVtYS5jcmVhdGUoe1xuICAgICAgZmVjaGE6IHNjaGVtYS5zdHJpbmcoKSxcbiAgICAgIGhvcmE6IHNjaGVtYS5zdHJpbmcoKSxcbiAgICAgIHZhbG9yOiBzY2hlbWEubnVtYmVyKCksXG4gICAgICBtZWRpZGE6IHNjaGVtYS5zdHJpbmcoKSxcbiAgICAgIG5vbWJyZTogc2NoZW1hLnN0cmluZygpLFxuICAgICAgc2F2ZTogc2NoZW1hLmJvb2xlYW4oKVxuICAgIH0pXG4gICAgcmV0dXJuIHBvc3RTY2hlbWFcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdmFsaWRhcjEoZGF0YSkge1xuICAgIHJldHVybiBkYXRhLnZhbGlkYXRlKHsgc2NoZW1hOiB0aGlzLnNjaGVtYTEoKSB9KVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBlbGltaW5hcihkYXRvKSB7XG4gICAgcmV0dXJuIGRhdG8uZGVsZXRlKClcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgbW9kaWZpY2FyKGRhdGEsIHJlZ2lzdHJvKSB7XG4gICAgcmV0dXJuIHJlZ2lzdHJvLm1lcmdlKGRhdGEpLnNhdmUoKVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBjcmVhclN0b2NrKHF1YW50aXR5LCBwcm9kdWN0KSB7XG4gICAgcHJvZHVjdC5zdG9jayA9IHByb2R1Y3Quc3RvY2sgLSBxdWFudGl0eVxuICAgIHJldHVybiBwcm9kdWN0XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHJlZ3Jlc2FyU3RvY2socXVhbnRpdHksIHByb2R1Y3QpIHtcbiAgICBwcm9kdWN0LnN0b2NrID0gcHJvZHVjdC5zdG9jayArIHF1YW50aXR5XG4gICAgcmV0dXJuIHByb2R1Y3RcbiAgfVxuXG5cbn1cblxuIl19