"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Hash_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Hash"));
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
const Database_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Database"));
class Users extends Orm_1.BaseModel {
    constructor() {
        super(...arguments);
        this.isActivated = true;
        this.rolid = 3;
    }
    static async hashPassword(users) {
        if (users.$dirty.password) {
            users.password = await Hash_1.default.make(users.password);
        }
    }
    static validarAdmin() {
        const postSchema = Validator_1.schema.create({
            email: Validator_1.schema.string({}, [Validator_1.rules.email()]),
            password: Validator_1.schema.string(),
            isActivated: Validator_1.schema.boolean(),
            rolid: Validator_1.schema.number()
        });
        return postSchema;
    }
    static validarEmpleado() {
        const postSchema = Validator_1.schema.create({
            email: Validator_1.schema.string({}, [Validator_1.rules.email()]),
            password: Validator_1.schema.string()
        });
        return postSchema;
    }
    static desactivar(User) {
        if (User.isActivated == false) {
            Database_1.default.from('api_tokens').where('user_id', User).delete();
        }
    }
    static validar(nivel, request) {
        if (nivel == 1) {
            try {
                const validatedData = request.validate({ schema: this.validarAdmin() });
                return validatedData;
            }
            catch (e) {
                return e;
            }
        }
        else if (nivel == 2 || nivel == 3) {
            const validatedData = request.validate({ schema: this.validarEmpleado() });
            return validatedData;
        }
    }
    static verUno(nivel, idO, idB) {
        if (nivel == 1) {
            const users = Database_1.default.from('users').where('id', idB);
            return users;
        }
        else if (nivel == 2 || nivel == 3) {
            if (idO == idB) {
                const users = Database_1.default.from('users').where('id', idB);
                return users;
            }
            else
                return null;
        }
    }
    static crear(data) {
        return this.create(data);
    }
    static ver() {
        return this.query();
    }
    static eliminar(dato) {
        return dato.delete();
    }
    static modificar(data, registro) {
        return registro.merge(data).save();
    }
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Users.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], Users.prototype, "email", void 0);
__decorate([
    (0, Orm_1.column)({ serializeAs: null }),
    __metadata("design:type", String)
], Users.prototype, "password", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], Users.prototype, "rememberMeToken", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Boolean)
], Users.prototype, "isActivated", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Users.prototype, "rolid", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Users.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Users.prototype, "updatedAt", void 0);
__decorate([
    (0, Orm_1.beforeSave)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Users]),
    __metadata("design:returntype", Promise)
], Users, "hashPassword", null);
exports.default = Users;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJVc2Vycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBZ0M7QUFDaEMsa0ZBQXdDO0FBQ3hDLGdFQUFxRTtBQUNyRSwyRUFBMEQ7QUFDMUQsMkZBQWlEO0FBR2pELE1BQXFCLEtBQU0sU0FBUSxlQUFTO0lBQTVDOztRQWNTLGdCQUFXLEdBQVksSUFBSSxDQUFBO1FBRzNCLFVBQUssR0FBVyxDQUFDLENBQUE7SUFrRjFCLENBQUM7SUF6RVEsTUFBTSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsS0FBWTtRQUMzQyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQ3pCLEtBQUssQ0FBQyxRQUFRLEdBQUcsTUFBTSxjQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQTtTQUNqRDtJQUNILENBQUM7SUFFTSxNQUFNLENBQUMsWUFBWTtRQUN4QixNQUFNLFVBQVUsR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUMvQixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ3pDLFFBQVEsRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtZQUN6QixXQUFXLEVBQUUsa0JBQU0sQ0FBQyxPQUFPLEVBQUU7WUFDN0IsS0FBSyxFQUFFLGtCQUFNLENBQUMsTUFBTSxFQUFFO1NBQ3ZCLENBQUMsQ0FBQTtRQUNGLE9BQU8sVUFBVSxDQUFBO0lBQ25CLENBQUM7SUFFTSxNQUFNLENBQUMsZUFBZTtRQUMzQixNQUFNLFVBQVUsR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUMvQixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ3pDLFFB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b0JBQVIsZ0JBQVE7d0NBQUE7QUFHMUI7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ3RDLGdCQUFRLG9CQUFSLGdCQUFRO3dDQUFBO0FBRzFCO0lBREMsSUFBQSxnQkFBVSxHQUFFOztxQ0FDMkIsS0FBSzs7K0JBSTVDO0FBOUJILHdCQW1HQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nXG5pbXBvcnQgSGFzaCBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0hhc2gnXG5pbXBvcnQgeyBjb2x1bW4sIGJlZm9yZVNhdmUsIEJhc2VNb2RlbCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0x1Y2lkL09ybSdcbmltcG9ydCB7IHNjaGVtYSwgcnVsZXMgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1ZhbGlkYXRvcidcbmltcG9ydCBEYXRhYmFzZSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9EYXRhYmFzZSdcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VycyBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUgfSlcbiAgcHVibGljIGlkOiBudW1iZXJcblxuICBAY29sdW1uKClcbiAgcHVibGljIGVtYWlsOiBzdHJpbmdcblxuICBAY29sdW1uKHsgc2VyaWFsaXplQXM6IG51bGwgfSlcbiAgcHVibGljIHBhc3N3b3JkOiBzdHJpbmdcblxuICBAY29sdW1uKClcbiAgcHVibGljIHJlbWVtYmVyTWVUb2tlbj86IHN0cmluZ1xuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgaXNBY3RpdmF0ZWQ6IGJvb2xlYW4gPSB0cnVlXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyByb2xpZDogbnVtYmVyID0gM1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGVUaW1lXG5cbiAgQGNvbHVtbi5kYXRlVGltZSh7IGF1dG9DcmVhdGU6IHRydWUsIGF1dG9VcGRhdGU6IHRydWUgfSlcbiAgcHVibGljIHVwZGF0ZWRBdDogRGF0ZVRpbWVcblxuICBAYmVmb3JlU2F2ZSgpXG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgaGFzaFBhc3N3b3JkKHVzZXJzOiBVc2Vycykge1xuICAgIGlmICh1c2Vycy4kZGlydHkucGFzc3dvcmQpIHtcbiAgICAgIHVzZXJzLnBhc3N3b3JkID0gYXdhaXQgSGFzaC5tYWtlKHVzZXJzLnBhc3N3b3JkKVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdmFsaWRhckFkbWluKCkge1xuICAgIGNvbnN0IHBvc3RTY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICAgIGVtYWlsOiBzY2hlbWEuc3RyaW5nKHt9LCBbcnVsZXMuZW1haWwoKV0pLFxuICAgICAgcGFzc3dvcmQ6IHNjaGVtYS5zdHJpbmcoKSxcbiAgICAgIGlzQWN0aXZhdGVkOiBzY2hlbWEuYm9vbGVhbigpLFxuICAgICAgcm9saWQ6IHNjaGVtYS5udW1iZXIoKVxuICAgIH0pXG4gICAgcmV0dXJuIHBvc3RTY2hlbWFcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdmFsaWRhckVtcGxlYWRvKCkge1xuICAgIGNvbnN0IHBvc3RTY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICAgIGVtYWlsOiBzY2hlbWEuc3RyaW5nKHt9LCBbcnVsZXMuZW1haWwoKV0pLFxuICAgICAgcGFzc3dvcmQ6IHNjaGVtYS5zdHJpbmcoKVxuICAgIH0pXG4gICAgcmV0dXJuIHBvc3RTY2hlbWFcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZGVzYWN0aXZhcihVc2VyKSB7XG4gICAgaWYgKFVzZXIuaXNBY3RpdmF0ZWQgPT0gZmFsc2UpIHtcbiAgICAgIERhdGFiYXNlLmZyb20oJ2FwaV90b2tlbnMnKS53aGVyZSgndXNlcl9pZCcsIFVzZXIpLmRlbGV0ZSgpXG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyB2YWxpZGFyKG5pdmVsLCByZXF1ZXN0KSB7XG4gICAgaWYgKG5pdmVsID09IDEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHZhbGlkYXRlZERhdGEgPSByZXF1ZXN0LnZhbGlkYXRlKHsgc2NoZW1hOiB0aGlzLnZhbGlkYXJBZG1pbigpIH0pXG4gICAgICAgIHJldHVybiB2YWxpZGF0ZWREYXRhXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBlXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuaXZlbCA9PSAyIHx8IG5pdmVsID09IDMpIHtcbiAgICAgIGNvbnN0IHZhbGlkYXRlZERhdGEgPSByZXF1ZXN0LnZhbGlkYXRlKHsgc2NoZW1hOiB0aGlzLnZhbGlkYXJFbXBsZWFkbygpIH0pXG4gICAgICByZXR1cm4gdmFsaWRhdGVkRGF0YVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdmVyVW5vKG5pdmVsLCBpZE8sIGlkQikge1xuICAgIGlmIChuaXZlbCA9PSAxKSB7XG4gICAgICBjb25zdCB1c2VycyA9IERhdGFiYXNlLmZyb20oJ3VzZXJzJykud2hlcmUoJ2lkJywgaWRCKTtcbiAgICAgIHJldHVybiB1c2Vyc1xuICAgIH0gZWxzZSBpZiAobml2ZWwgPT0gMiB8fCBuaXZlbCA9PSAzKSB7XG4gICAgICBpZiAoaWRPID09IGlkQikge1xuICAgICAgICBjb25zdCB1c2VycyA9IERhdGFiYXNlLmZyb20oJ3VzZXJzJykud2hlcmUoJ2lkJywgaWRCKTtcbiAgICAgICAgcmV0dXJuIHVzZXJzXG4gICAgICB9IGVsc2VcbiAgICAgICAgcmV0dXJuIG51bGxcblxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXIoZGF0YSkge1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZShkYXRhKVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyB2ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnkoKVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBlbGltaW5hcihkYXRvKSB7XG4gICAgcmV0dXJuIGRhdG8uZGVsZXRlKClcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgbW9kaWZpY2FyKGRhdGEsIHJlZ2lzdHJvKSB7XG4gICAgcmV0dXJuIHJlZ2lzdHJvLm1lcmdlKGRhdGEpLnNhdmUoKVxuICB9XG59XG4iXX0=